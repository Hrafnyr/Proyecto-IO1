/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package efficax;

import java.awt.Font;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Iterator;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Moises
 */
public class menuOptions2 extends javax.swing.JFrame {
    int contLineas=0;
    int contDias=0;
    int cantAct = 0;
    double[][] dataMatrix;
    double[][] matrizOriginal;
    ArrayList<String> dias = new ArrayList(); //columnas
    ArrayList<ArrayList> matriz = new ArrayList();
    
    //Guardar toda la informacion
    public static ArrayList<String> valores1= new ArrayList();
    public static ArrayList<String> valores2= new ArrayList();
    public static String tiempoInvertido = "";
    
    public menuOptions2() {
        initComponents();
        this.jLabel3.setVisible(false);
        this.jLabel5.setVisible(false);
        this.jLabel6.setVisible(false);
        SetImage2();
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelImage = new javax.swing.JLabel();
        txtCantActividades = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        checkLunes = new javax.swing.JCheckBox();
        checkMartes = new javax.swing.JCheckBox();
        checkMiercoles = new javax.swing.JCheckBox();
        checkJueves = new javax.swing.JCheckBox();
        checkViernes = new javax.swing.JCheckBox();
        checkSabado = new javax.swing.JCheckBox();
        checkDomingo = new javax.swing.JCheckBox();
        buttonGenerateModel = new efficax.MyButton();
        btnBack = new efficax.MyButton();
        btnCalcular = new efficax.MyButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEdit = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(216, 248, 251));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setForeground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Asignación de tareas diarias");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        txtCantActividades.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtCantActividades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantActividadesActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Cantidad de actividades");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Días de la semana que se va a trabajar");

        checkLunes.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        checkLunes.setText("Lunes");
        checkLunes.setOpaque(false);
        checkLunes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkLunesActionPerformed(evt);
            }
        });

        checkMartes.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        checkMartes.setText("Martes");
        checkMartes.setOpaque(false);

        checkMiercoles.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        checkMiercoles.setText("Miércoles");
        checkMiercoles.setOpaque(false);

        checkJueves.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        checkJueves.setText("Jueves");
        checkJueves.setOpaque(false);

        checkViernes.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        checkViernes.setText("Viernes");
        checkViernes.setOpaque(false);

        checkSabado.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        checkSabado.setText("Sábado");
        checkSabado.setOpaque(false);

        checkDomingo.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        checkDomingo.setText("Domingo");
        checkDomingo.setOpaque(false);

        buttonGenerateModel.setBackground(new java.awt.Color(96, 116, 33));
        buttonGenerateModel.setForeground(new java.awt.Color(255, 255, 255));
        buttonGenerateModel.setText("Generar modelo");
        buttonGenerateModel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        buttonGenerateModel.setRadius(50);
        buttonGenerateModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenerateModelActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(134, 12, 155));
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Regresar");
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnBack.setRadius(50);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnCalcular.setBackground(new java.awt.Color(255, 255, 0));
        btnCalcular.setText("Calcular");
        btnCalcular.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnCalcular.setRadius(50);
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Ahora ingrese en las celdas los tiempos disponibles");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("para cada actividad y luego presione calcular");

        tableEdit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableEdit);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Puede moficar los nombres");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel2)
                .addGap(146, 146, 146)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(txtCantActividades, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(168, 168, 168)
                                .addComponent(checkLunes))
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(checkSabado)
                                .addGap(18, 18, 18)
                                .addComponent(checkDomingo))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(checkMartes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkMiercoles)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkJueves)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkViernes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonGenerateModel, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(29, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkLunes)
                    .addComponent(checkMartes)
                    .addComponent(checkMiercoles)
                    .addComponent(checkJueves)
                    .addComponent(checkViernes)
                    .addComponent(buttonGenerateModel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantActividades, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkDomingo)
                            .addComponent(checkSabado, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(7, 7, 7)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCantActividadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantActividadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantActividadesActionPerformed

    private void checkLunesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkLunesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkLunesActionPerformed

    private void buttonGenerateModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGenerateModelActionPerformed
        
        String cantidadActividades = this.txtCantActividades.getText();
                
        //Validaciones
        try {
            if(cantidadActividades.equals("")){
                JOptionPane.showMessageDialog(
                    this, "Debe ingresar la cantidad de actividades");
            }
            else 
                if(search_digit(cantidadActividades)==false){
                    JOptionPane.showMessageDialog(
                            this, "La cantidad debe ser un número");
                }else if(Integer.parseInt(cantidadActividades)<=0){
                        JOptionPane.showMessageDialog(
                            this, "La cantidad debe ser positiva");
                }
                else{
                    cantAct=0;
                    dias.clear();
                    
                    if (this.checkLunes.isSelected()) {
                        dias.add("Lunes");
                    }
                    if (this.checkMartes.isSelected()) {
                        dias.add("Martes");
                    }
                    if (this.checkMiercoles.isSelected()) {
                        dias.add("Miercoles");
                    }
                    if (this.checkJueves.isSelected()) {
                        dias.add("Jueves");
                    }
                    if (this.checkViernes.isSelected()) {
                        dias.add("Viernes");
                    }
                    if (this.checkSabado.isSelected()) {
                        dias.add("Sabado");
                    }
                    if (this.checkDomingo.isSelected()) {
                        dias.add("Domingo");
                    }
                    
                    if(dias.size()==0){
                        JOptionPane.showMessageDialog(
                            this, "No se han seleccionado días de trabajo");
                    }
                    else
                    {
                        cantAct=Integer.parseInt(cantidadActividades);
                        if (dias.size()==cantAct) {
                            System.out.println("Todo bien, mostrando datos:");
                            System.out.println("->"+cantidadActividades);
                            for (int i = 0; i < dias.size(); i++) {
                                System.out.println("->"+dias.get(i));
                            }
                            

                            //Metodo que llena la tabla
                            insertModelNewModel();

                            this.jLabel3.setVisible(true);
                            this.jLabel5.setVisible(true);
                            this.jLabel6.setVisible(true);

                            //Limpiar datos
                            this.txtCantActividades.setText("");
                            this.checkLunes.setSelected(false);
                            this.checkMartes.setSelected(false);
                            this.checkMiercoles.setSelected(false);
                            this.checkJueves.setSelected(false);
                            this.checkViernes.setSelected(false);
                            this.checkSabado.setSelected(false);
                            this.checkDomingo.setSelected(false);                                              
                        }
                        else{
                            JOptionPane.showMessageDialog(
                                this, "El número de actividades debe ser"
                                    + " igual al número de días a trabajar");
                            cantAct=0;
                            dias.clear();
                            this.txtCantActividades.setText("");
                            this.checkLunes.setSelected(false);
                            this.checkMartes.setSelected(false);
                            this.checkMiercoles.setSelected(false);
                            this.checkJueves.setSelected(false);
                            this.checkViernes.setSelected(false);
                            this.checkSabado.setSelected(false);
                            this.checkDomingo.setSelected(false);
                        }
                    }     
                }
        } 
            catch (Exception e) 
            {
                JOptionPane.showMessageDialog(
                            this, "Los datos ingresados no son válidos");
            }     
    }//GEN-LAST:event_buttonGenerateModelActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        MainWindow principal = new MainWindow();
        principal.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        //Validaciones
        if (this.tableEdit.getRowCount()==0) {
            JOptionPane.showMessageDialog(
                        this, "No se ha generado el modelo");
        }
        else{
            this.tableEdit.clearSelection();
            if(this.tableEdit.isEditing()){//si se esta edtando la tabla
                this.tableEdit.getCellEditor().stopCellEditing();//detenga la edicion
            }

            if(searchEmptyValues()==true){
                JOptionPane.showMessageDialog(
                        this, "No puede dejar espacios vacíos");
            }else
                //Validar que sean números enteros
                if(search_digitInTable()==false){
                    JOptionPane.showMessageDialog(
                        this, "Los datos deben ser números");
                }
                else{
                    //validar numeros mayores que cero
                    if(digitPositive()==false){
                        JOptionPane.showMessageDialog(
                            this, "Los datos deben ser positivos");
                    }
                    else{
                        System.out.println("Todo bien");
                        createMatrix();
                    }
                }
        }    
    }//GEN-LAST:event_btnCalcularActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuOptions2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuOptions2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuOptions2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuOptions2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menuOptions2().setVisible(true);
            }
        });
    }
    
    private void SetImage2(){
        ImageIcon image = new ImageIcon(
                            getClass().getResource("/images/calendario.png"));
        Icon icon = new ImageIcon(
                        image.getImage().getScaledInstance(
                                this.labelImage.getWidth(), 
                                this.labelImage.getHeight(), 
                                Image.SCALE_DEFAULT));
        this.labelImage.setIcon(icon);
        this.repaint();
    }
    
    private boolean search_digit(String s){
  
        // Function to check if is digit
        // is found or not
        for (int i = 0; i < s.length(); i++) {
            if (Character.isDigit(
                    s.charAt(i))
                == true) {
                // return position of digit
                return true;
            }
        }
        // return 0 if digit not present
        return false;
    }
    
    private void insertModelNewModel(){
        DefaultTableModel newModel = new DefaultTableModel();
        
        //Agregango columnas
        newModel.addColumn(" Actividad / Días");
        for (int i = 0; i <dias.size(); i++) {
            newModel.addColumn(dias.get(i));
        }
        
        //Llenando espacios
        String nombre="Actividad ";
        String fila [] = new String[dias.size()+1];
        
        for (int i = 0; i < cantAct; i++) {
            for (int j = 0; j < dias.size()+1; j++) {
                if(j==0){
                    fila[j]=nombre+String.valueOf(i);
                }
                else{
                    fila[j]="";
                }
            }
            newModel.addRow(fila);
        }
        
        JTableHeader th;
        th = this.tableEdit.getTableHeader();
        Font fuente = new Font("Verdana", Font.BOLD,12);
        th.setFont(fuente);
        this.tableEdit.setRowHeight(30);
        
        //Agregando el modelo
        this.tableEdit.setModel(newModel);
        
    }
    
    private boolean searchEmptyValues(){
        for (int i = 0; i < this.tableEdit.getRowCount(); i++) {
            for (int j = 1; j < dias.size()+1; j++) {
                if (this.tableEdit.getValueAt(i,j).toString().equals("")) {
                    return true;
                }
            }
        }
        return false;
    }
    
    private boolean search_digitInTable(){

        for (int i = 0; i < this.tableEdit.getRowCount(); i++) {
            for (int j = 1; j < dias.size()+1; j++) {
                try {
                    String dato = this.tableEdit.getValueAt(i,j).toString();
                    int d = Integer.parseInt(dato);
                } catch (Exception e) {
                    return false;
                }
            }
        }
        
        return true;
    }
    
    private boolean digitPositive(){

        for (int i = 0; i < this.tableEdit.getRowCount(); i++) {
            for (int j = 1; j < dias.size()+1; j++) {
                String dato = this.tableEdit.getValueAt(i,j).toString();
                int d = Integer.parseInt(dato);
                if(d<=0){
                    return false;
                }
            }
        }
        
        return true;
    }
    
    private void createMatrix(){
        //como es matriz cuadrada, usar cantidad de actividades
        for (int i = 0; i < cantAct; i++) {
            ArrayList<cell> fila = new ArrayList<>();
            for (int j = 0; j < cantAct; j++) {
                String filaT = String.valueOf(this.tableEdit.getValueAt(i, 0));
                String column= dias.get(j);
                double valor = Double.parseDouble(
                                String.valueOf(
                                   this.tableEdit.getValueAt(i, j+1)));
                cell nuevaCelda = new cell(filaT,column,valor,false);
                fila.add(nuevaCelda);
            }
            matriz.add(fila);
        }
        
        
        
        dataMatrix = new double[cantAct][cantAct];
        matrizOriginal= new double[cantAct][cantAct];
        for (int i = 0; i < cantAct; i++) {
            ArrayList<cell> fila = matriz.get(i);
            for (int j = 0; j < cantAct; j++) {
                dataMatrix[i][j]=fila.get(j).valor;
                matrizOriginal[i][j]=fila.get(j).valor;
            }
        }
        System.out.println("Matriz original");
        for (int i = 0; i < dataMatrix[0].length; i++) {
            for (int j = 0; j < cantAct; j++) {
                System.out.print("     ");
                System.out.print(dataMatrix[i][j]);
                System.out.print("     ");
            }
            System.out.println();
        }
        
        
        metodoHungaro ha = new metodoHungaro(dataMatrix);
        int[][] asignacion = ha.findOptimalAssignment();

        if (asignacion.length > 0) {
            System.out.println("Matriz reducida");
            int total=0;
            for (int i = 0; i < dataMatrix[0].length; i++) {
                for (int j = 0; j < cantAct; j++) {
                    System.out.print("     ");
                    System.out.print(dataMatrix[i][j]);
                    System.out.print("     ");
                }
                System.out.println();
            }
            
            for (int i = 0; i < asignacion.length; i++) {
                
                int columna = asignacion[i][0];  
                int fila = asignacion[i][1];
                double valor = matrizOriginal[fila][columna];
                total+=valor;
                System.out.print(dias.get(columna)
                    + "\t=> "+this.tableEdit.getValueAt(fila, 0)+ " "
                    + " (" 
                    + String.valueOf(valor) + ")");
                System.out.println();
                
                //guardar datos para resultados
                valores1.add(dias.get(columna));
                valores2.add(String.valueOf(this.tableEdit.getValueAt(fila, 0)));
            }
            System.out.println("Mínimo de tiempo empleado: "+total);
            tiempoInvertido=String.valueOf(total);
            
            this.setVisible(false);
            resultado2 vR = new resultado2();
            vR.Clear_T(); //limpia tabla
            vR.addNewRow(); //agrega nuevos datos
            vR.showLabel();
            vR.setVisible(true);
            
        } else {
          System.out.println("No se encontró la asignación");
        }  
    }
    
    public void limpiar(){
        valores1.clear();
        valores2.clear();
        tiempoInvertido = "";
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private efficax.MyButton btnBack;
    private efficax.MyButton btnCalcular;
    private efficax.MyButton buttonGenerateModel;
    private javax.swing.JCheckBox checkDomingo;
    private javax.swing.JCheckBox checkJueves;
    private javax.swing.JCheckBox checkLunes;
    private javax.swing.JCheckBox checkMartes;
    private javax.swing.JCheckBox checkMiercoles;
    private javax.swing.JCheckBox checkSabado;
    private javax.swing.JCheckBox checkViernes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelImage;
    private javax.swing.JTable tableEdit;
    private javax.swing.JTextField txtCantActividades;
    // End of variables declaration//GEN-END:variables
}
